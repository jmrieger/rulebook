# This is a basic workflow to help you get started with Actions
name: Build NCPA Rulebook

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Multi-step process to build the rulebook using pandoc and ghostscript
      - name: Build the Rulebook
        uses: docker://ncpapaintball/rulebook-builder:latest
        with:
          entrypoint: /bin/sh
          args: |
            -c "
            mkdir build/ && \
            pandoc Cover.md -o build/Cover.pdf && \
            pandoc Rulebook.md --toc --toc-depth=6 -o build/Main.pdf && \
            gs -dNOPAUSE -sDEVICE=pdfwrite -sOUTPUTFILE=build/rulebook.pdf -dBATCH build/Cover.pdf build/Main.pdf && \
            rm build/Cover.pdf build/Main.pdf \
            "

      - name: Upload artifact zip
        uses: actions/upload-artifact@v1
        with:
          name: Rulebook
          path: build/rulebook.pdf

      - name: Get Current Time
        id: current_time
        uses: 1466587594/get-current-time@v1.0.0
        with:
          format: MMMM D YYYY h:m:s A
          utcOffset: "-05:00"  

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "${{ steps.current_time.outputs.formattedTime }}"
          release_name: "${{ steps.current_time.outputs.formattedTime }}"
          draft: false
          prerelease: false

      - name: Upload a Release Asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./rulebook.pdf
          asset_name: rulebook.pdf
          asset_content_type: application/pdf
